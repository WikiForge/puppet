server {
	listen 82;
	listen [::]:82;

	server_name shellbox.internal;
	root /srv/shellbox/public_html;

	location /shellbox {
		alias /srv/shellbox/public_html/shellbox.php;
		fastcgi_pass unix:/run/php/fpm-shellbox.sock;
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root/shellbox.php;
		fastcgi_param HTTP_AUTHORIZATION $http_authorization;
		fastcgi_param SHELLBOX_SECRET_KEY <%= @shellbox_secretkey %>;
	}

	location / {
		satisfy any;
		deny all;
		allow 127.0.0.1;
	}

	location ~ \.php$ {
		fastcgi_pass unix:/run/php/fpm-shellbox.sock;
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	}

	location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|mp4|ogg|ogv|webm|htc|woff|woff2|ttf)$ {
		expires 1M;
		access_log off;
		add_header Cache-Control "public";
	}
}

server {
	# We can only set backlog once per port (so this will be applied to the others below)
	listen 80 deferred backlog=4096;
	listen [::]:80 deferred ipv6only=on backlog=4096;
	listen 443 ssl deferred http2 backlog=4096;
	listen [::]:443 deferred ssl http2 ipv6only=on backlog=4096;

	server_name wikiforge.net;
	root /srv/mediawiki/landing;
	index index.php index.html;

	if ($http_user_agent ~* "WordPress") {
		return 403;
	}

	ssl_certificate /etc/ssl/localcerts/wildcard.wikiforge.net.crt;
	ssl_certificate_key /etc/ssl/private/wildcard.wikiforge.net.key;

	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

	add_header X-Served-By '<%= scope.lookupvar('::fqdn') %>';

	# XSS Protection
	add_header x-xss-protection "1; mode=block" always;

	add_header X-Frame-Options "ALLOW-FROM static.wikiforge.net";

	location ~ ^/(\.git|config) {
		deny all;
	}

	location ~ \.php {
		include fastcgi_params;
		fastcgi_index index.php;
		fastcgi_split_path_info ^(.+\.php)(.*)$;
		try_files $fastcgi_script_name =404;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_pass unix:/run/<%= @php_fpm_sock %>;
		fastcgi_read_timeout 140;
		send_timeout 140;
	}

	location /discord {
		return 301 https://discord.gg/ND5Arhght2;
	}

	location ~ ^/((?!(css|discord|js|images)).)*$ {
		# redirect query parameter to path
		if ($arg_lang !~ '^$|en') {
			return 301 /$arg_lang;
		}

		# redirect en (default) to /
		if ($arg_lang = 'en') {
			return 301 /;
		}

		rewrite ^/en(/.*)?$ / permanent;

		# rewrite path to lang, so that, for example, /en will act the
		# same as ?lang=en, but without the ?lang being needed 
		rewrite ^/([a-z\-]+)(/.*)?$ /$2?lang=$1 break;

		# if we aren't using a user selected language,
		# use $http_accept_language
		if ( $http_accept_language ~ ^(..) ) {
			set $lang $1;
		}

		# rewrite to language if not default
		if ($lang != 'en') {
			rewrite ^(.*) $1?lang=$lang break;
		}
	}
}

server {
	listen 80;
	listen [::]:80;

	server_name ~.;

	if ($http_user_agent ~* "WordPress") {
		return 403;
	}

	location /php_status {
		access_log off;
		allow 127.0.0.1;
		include fastcgi_params;
		fastcgi_pass unix:/run/<%= @php_fpm_sock %>;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_buffers 32 32k;
		fastcgi_buffer_size 64k;
		fastcgi_read_timeout 20;
 		send_timeout 20s;
	}

	location / {
		return 301 https://$host$request_uri;
	}
}

server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	server_name *.wikiforge.net;
	root /srv/mediawiki;

	ssl_certificate /etc/ssl/localcerts/wildcard.wikiforge.net.crt;
	ssl_certificate_key /etc/ssl/private/wildcard.wikiforge.net.key;

	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

	add_header X-Served-By '<%= scope.lookupvar('::fqdn') %>';

	# XSS Protection
	add_header x-xss-protection "1; mode=block" always;

	add_header X-Frame-Options "ALLOW-FROM static.wikiforge.net";

	error_page 404 /ErrorPages/404.php;
	error_page 502 /ErrorPages/502.html;
	error_page 504 /ErrorPages/504.php;

	include /etc/nginx/mediawiki-includes;

	location = /robots.txt {
		rewrite ^(.*)$ /robots.php;
	}

	location = /check {
		rewrite ^(.*)$ /healthcheck.php;
	}

	location = /sitemap.xml {
		rewrite ^(.*)$ /sitemap.php;
	}
}

<%- @sslcerts.each_pair do | name, property | -%>
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
<%- if property['additional_domain'] -%>
	server_name <%= property['url'] %> <%= property['additional_domain'] %>;
<%- else -%>
	server_name <%= property['url'] %>;
<%- end -%>
	root /srv/mediawiki;
<%- if property['sslname'] -%>
	ssl_certificate /etc/ssl/localcerts/<%= property['sslname'] %>.crt;
	ssl_certificate_key /etc/ssl/private/<%= property['sslname'] %>.key;
<%- else -%>
	ssl_certificate /etc/ssl/localcerts/<%= property['url'] %>.crt;
	ssl_certificate_key /etc/ssl/private/<%= property['url'] %>.key;
<%- end -%>

<%- if property['hsts'] == "strict" -%>  
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
<%- else -%>
	add_header Strict-Transport-Security "max-age=604800";
<%- end -%>

	add_header X-Served-By '<%= scope.lookupvar('::fqdn') %>';

	# XSS Protection
	add_header x-xss-protection "1; mode=block" always;

	add_header X-Frame-Options "ALLOW-FROM static.wikiforge.net";

	error_page 404 /ErrorPages/404.php;
	error_page 502 /ErrorPages/502.html;
	error_page 504 /ErrorPages/504.php;

	include /etc/nginx/mediawiki-includes;

	location = /robots.txt {
		rewrite ^(.*)$ /robots.php;
	}

	location = /sitemap.xml {
		rewrite ^(.*)$ /sitemap.php;
	}
}

<%- end -%>
